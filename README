BeeAndPlants Game

By Jeremy Su, Ian Mao, and Max Tung 

Technologies used: Python and Pygame framework


Purpose: Create a concurrent game with Python where the player controls
a bee that tries to pollinate all flowers scattered on the map while
dodging the birds that are hunting for it. 

/////////////////////////////////////////////////////////////////////
//*******************      DESIGN      ****************************//
/////////////////////////////////////////////////////////////////////

The game starts with 20 flowers, a bee and certain amount of brids randomly
placed on the map. The player controls the movement of the bee, and
the birds move swiftly in a random manner. After the bee successfully 
pollinates a flower, the flower will disappear and the player gets one
point. If the bee gets eaten by a bird, the game is over. 

///////////////////// What is a bee? ///////////////////////////

A bee has the goal of pollinating all flowers on the map while
avoiding to be eaten by the birds. 

////////////////////// What is a flower? /////////////////////////////

A flower stands for one point for the player if successfully pollinated
by the bee. A user wins if all flowers are pollinated.

////////////////////// What is a bird? /////////////////////////////

bird is the object the bee is trying not to clash into on the map because
birds eat the bee and the player wil lose.

/////////////////////////////////////////////////////////////////////////
//************************ Implementation *****************************//
/////////////////////////////////////////////////////////////////////////

There will be three main modules: Bee module, Bird module, GameManager module,
and smallgame, which is the main module. 

Bee module: has the Bee class that contains all info of a bee object
and a move function defines how a bee will move on the map.

Bird module: has the bird class that has the info of a bird. It also
has functions to ensure that all birds run on their own threads.

GameManager module: contains the state of the game and how the game board
will be updated.

smallgame module: contains the main loop of the game, and draws the map
based on the state it's in.



